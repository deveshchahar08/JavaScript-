=> Functions
1. simple-Function => use with function keyword
2. Anonomous function => No use function keyword
3. Arrow function => it a modern funtion , used with arrow
4. IIFE => when we create it automatical execute (immediately invoked function expresstion)
5. recerrive function => step by step solve the problem
6. constructor function => that function use new keyword
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.Simple function

function today(a,b,c){
    let sum = a+b+c
    console.log(sum)
}
today(5,6,4)

//Anonymous Function

// let add = function(a,b){
//     const c = a+b
//     console.log(c)
// }
// add(10,10)

// let show = function(a,b){
//     const c = a-b
//     console.log(c)
// }
// show(100,50)

// let tata = function(a,b){
//     const c = a*b
//     console.log(c)
// }
// tata(5,5)

// let arr = function(a,b){
//     const c = a/b
//     console.log(c)
// }
// arr(100,10)

// let vap = function(a,b,c){
//     const d = a/b*c
//     console.log(d)
// }
// vap(10,2,4)

// let p = function(a,b){
//     const c = a%b
//     console.log(c)
// }
// p(10,50)

//IIFE Function

// (function(){
//     let x = 8
//     console.log(x)
// })
// ()

// (function(a,b){
//     let y = a+b
//     console.log(y)
// })
// (10,10)

// (function(a,b){
//     let x = a*b
//     console.log(x)
// })
// (5,10)

// (function(a,b,c){
//     let y = a*b*c
//     console.log(y)
// })
// (2,2,2)

// (function(a,b){
//     let div = a/b
//     console.log(div)
// })
// (50,5)

// (function(a,b){
//     let sub = a-b
//     console.log(sub)
// })
// (100,20)

// Arrow Function

// let today = (a,b)=>{
//     let x = a+b
//     console.log(x)
// }
// today(20,20)

// let y = (a,b)=>{
//     let p = a*b
//     console.log(p)
// }
// y(5,6)

// let sub = (a,b)=>{
//     let c = a-b
//     console.log(c)
// }
// sub(50,10)

// let div = (a,b)=>{
//     let d = a/b
//     console.log(d)
// }
// div(50,5)

// let mod = (a,b)=>{
//     let m = a%b
//     console.log(m)
// }
// mod(82,3)

//Recursive Functions

// function today(n){
//     if (n===200){
//         console.log("complete")
//         return
//     }
//     console.log(n)
//     today(n+10)
// }
// today(100)

// function lala(l){
//     if (l===500){
//     console.log("execute")
//     return
//     }
//     console.log(l)
//     lala(l+50)
// }
// lala(100)

// function tom(y){
//     if (y===100){
//         console.log("done")
//         return
//     }
//     console.log(y)
//     tom(y-20)
// }
// tom(300)


// function pro(n){
//     if (n===100){
//         console.log("done")
//         return
//     }
//     console.log(n)
//     pro(n-10)
// }
// pro(200)
